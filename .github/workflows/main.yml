name: Build Docker image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest
    container: golang:alpine
    steps:
      - uses: actions/checkout@v3
      - run: |
          apk add --no-cache make
          make fmt
  gosec:
    runs-on: ubuntu-latest
    container: securego/gosec:latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          apk add --no-cache make
          make sec
  golangci-lint:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - run: |
          apk add --no-cache make
          make golancilint
  docker-lint:
    runs-on: ubuntu-latest
    container: hadolint/hadolint:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - run: |
          apk add --no-cache make
          make docker-lint
  security-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ["go"]
        # Learn more...
    container:
      image: golang
    steps:
      - uses: actions/checkout@v3
      - name: Install & Tests
        run: |
          go mod download
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head of the pull request.
          # Only include this option if you are running this workflow on pull requests.
          fetch-depth: 2

      # If this run was triggered by a pull request event then checkout
      # the head of the pull request instead of the merge commit.
      # Only include this step if you are running this workflow on pull requests.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  build-docker:
    runs-on: ubuntu-latest
    needs: [security-check, lint, gosec, golangci-lint, docker-lint]
    steps:
      - name: Set up CD
        uses: actions/checkout@v3
      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@v2.1.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1
      - name: Docker login
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/adrianvillanueva997/deficientebot_telegram:latest
          labels: ${{ steps.meta.outputs.labels }}

          #tags: |
          #  adrianvillanueva997/telegrambot_deficiente:${{ github.sha }}
          #  adrianvillanueva997/telegrambot_deficiente:latest
